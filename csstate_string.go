// Code generated by "stringer -type=CsState"; DO NOT EDIT.

package bidib

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BIDIB_CS_STATE_OFF-0]
	_ = x[BIDIB_CS_STATE_STOP-1]
	_ = x[BIDIB_CS_STATE_SOFTSTOP-2]
	_ = x[BIDIB_CS_STATE_GO-3]
	_ = x[BIDIB_CS_STATE_GO_IGN_WD-4]
	_ = x[BIDIB_CS_STATE_PROG-8]
	_ = x[BIDIB_CS_STATE_PROGBUSY-9]
	_ = x[BIDIB_CS_STATE_BUSY-13]
	_ = x[BIDIB_CS_STATE_QUERY-255]
}

const (
	_CsState_name_0 = "BIDIB_CS_STATE_OFFBIDIB_CS_STATE_STOPBIDIB_CS_STATE_SOFTSTOPBIDIB_CS_STATE_GOBIDIB_CS_STATE_GO_IGN_WD"
	_CsState_name_1 = "BIDIB_CS_STATE_PROGBIDIB_CS_STATE_PROGBUSY"
	_CsState_name_2 = "BIDIB_CS_STATE_BUSY"
	_CsState_name_3 = "BIDIB_CS_STATE_QUERY"
)

var (
	_CsState_index_0 = [...]uint8{0, 18, 37, 60, 77, 101}
	_CsState_index_1 = [...]uint8{0, 19, 42}
)

func (i CsState) String() string {
	switch {
	case i <= 4:
		return _CsState_name_0[_CsState_index_0[i]:_CsState_index_0[i+1]]
	case 8 <= i && i <= 9:
		i -= 8
		return _CsState_name_1[_CsState_index_1[i]:_CsState_index_1[i+1]]
	case i == 13:
		return _CsState_name_2
	case i == 255:
		return _CsState_name_3
	default:
		return "CsState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
